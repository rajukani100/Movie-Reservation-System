// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          String @id @default(uuid())
  title       String
  description String
  genre       String
  showtimes   Show[]
}

model Show {
  id          String        @id @default(uuid())
  movie       Movie         @relation(fields: [movieId], references: [id])
  movieId     String
  startTime   DateTime
  seats       Seat[]
  Reservation Reservation[]

  @@map("Showtime")
}

model Seat {
  seatNumber    String
  showtime      Show         @relation(fields: [ShowId], references: [id])
  ShowId        String       @map("showtimeId")
  isReserved    Boolean      @default(false)
  reservation   Reservation? @relation(fields: [reservationId], references: [id])
  reservationId String?

  @@id([ShowId, seatNumber])
}

model Reservation {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  showtime   Show     @relation(fields: [showtimeId], references: [id])
  showtimeId String
  seats      Seat[]
  createdAt  DateTime @default(now())
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  passwordHash String
  role         Role          @default(USER)
  reservations Reservation[]
  createdAt    DateTime      @default(now())
}

enum Role {
  ADMIN
  USER
}
